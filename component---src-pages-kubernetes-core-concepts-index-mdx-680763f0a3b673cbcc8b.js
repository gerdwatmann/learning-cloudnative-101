(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{"013z":function(e,t,n){"use strict";n("KKXr"),n("pIFo");var a=n("pOBw"),s=n("q1tI"),r=n.n(s),c=n("NmYn"),o=n.n(c),b=n("OKom"),l=n("k4MR"),i=n("TSYQ"),p=n.n(i),u=n("QH2O"),m=n("qKvR"),d=function(e){var t,n=e.title,a=e.tabs,s=void 0===a?[]:a;return Object(m.b)("div",{className:p()(u.pageHeader,(t={},t[u.withTabs]=s.length,t))},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12"},Object(m.b)("h1",{id:"page-title",className:u.text},n)))))},j=n("pEPl"),O=n("BAC9"),h=function(e){var t=e.relativePagePath,n=e.repository,a=j.data.site.siteMetadata.repository,s=n||a,r=s.baseUrl,c=s.subDirectory,o=r+"/edit/"+s.branch+c+"/src/pages"+t;return r?Object(m.b)("div",{className:"bx--row "+O.row},Object(m.b)("div",{className:"bx--col"},Object(m.b)("a",{className:O.link,href:o},"Edit this page on GitHub"))):null},v=n("FCXl"),f=(n("Oyvg"),n("Wbzz")),y=n("I8xM");var g=function(e){var t,n;function a(){return e.apply(this,arguments)||this}return n=e,(t=a).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,a.prototype.render=function(){var e=this.props,t=e.tabs,n=e.slug,a=n.split("/").filter(Boolean).slice(-1)[0],s=t.map((function(e){var t,s=o()(e,{lower:!0}),r=s===a,c=new RegExp(a+"(?!-)"),b=n.replace(c,s);return Object(m.b)("li",{key:e,className:p()((t={},t[y.selectedItem]=r,t),y.listItem)},Object(m.b)(f.Link,{className:y.link,to:""+b},e))}));return Object(m.b)("div",{className:y.tabsContainer},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(m.b)("nav",null,Object(m.b)("ul",{className:y.list},s))))))},a}(r.a.Component),k=n("MjG9");t.a=function(e){var t=e.pageContext,n=e.children,s=e.location,r=e.Title,c=t.frontmatter,i=void 0===c?{}:c,p=t.relativePagePath,u=t.titleType,j=i.tabs,O=i.title,f=i.theme,y=i.description,N=i.keywords,w=a.data.site.pathPrefix,x=w?s.pathname.replace(w,""):s.pathname,P=j?x.split("/").slice(-1)[0]||o()(j[0],{lower:!0}):"";return Object(m.b)(l.a,{tabs:j,homepage:!1,theme:f,pageTitle:O,pageDescription:y,pageKeywords:N,titleType:u},Object(m.b)(d,{title:r?Object(m.b)(r,null):O,label:"label",tabs:j}),j&&Object(m.b)(g,{slug:x,tabs:j,currentTab:P}),Object(m.b)(k.a,{padded:!0},n,Object(m.b)(h,{relativePagePath:p})),Object(m.b)(v.a,{pageContext:t,location:s,slug:x,tabs:j,currentTab:P}),Object(m.b)(b.a,null))}},pEPl:function(e){e.exports=JSON.parse('{"data":{"site":{"id":"Site","siteMetadata":{"repository":{"baseUrl":"https://github.com/ibm-cloud-architecture/learning-cloudnative-101","subDirectory":"/","branch":"master"}}}}}')},pOBw:function(e){e.exports=JSON.parse('{"data":{"site":{"id":"Site","pathPrefix":""}}}')},zak7:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return d}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var a=n("7ljp"),s=n("013z");n("qKvR");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var c={},o=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(a.b)("div",t)}},b=o("AnchorLinks"),l=o("AnchorLink"),i=o("Tabs"),p=o("Tab"),u={_frontmatter:c},m=s.a;function d(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,["components"]);return Object(a.b)(m,r({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)(b,{mdxType:"AnchorLinks"},Object(a.b)(l,{mdxType:"AnchorLink"},"Kubernetes API Primitives"),Object(a.b)(l,{mdxType:"AnchorLink"},"Creating Pods"),Object(a.b)(l,{mdxType:"AnchorLink"},"Namespaces"),Object(a.b)(l,{mdxType:"AnchorLink"},"Activities")),Object(a.b)("h1",null,"Kubernetes API Primitives"),Object(a.b)("p",null,"Kubernetes API primitive, also known as Kubernetes objects, are the basic building blocks of any application running in Kubernetes"),Object(a.b)("p",null,"Examples:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Pod"),Object(a.b)("li",{parentName:"ul"},"Node"),Object(a.b)("li",{parentName:"ul"},"Service"),Object(a.b)("li",{parentName:"ul"},"ServiceAccount")),Object(a.b)("p",null,"Two primary members"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Spec, desired state"),Object(a.b)("li",{parentName:"ul"},"Status, current state")),Object(a.b)("h2",null,"Resources"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/"}),"https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://kubernetes.io/docs/tutorials/kubernetes-basics/"}),"https://kubernetes.io/docs/tutorials/kubernetes-basics/"))),Object(a.b)("h2",null,"References"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"kubectl api-resources\nkubectl api-resources -o wide\nkubectl api-resources -o name\n\nkubectl get nodes,ns,po,deploy,svc\n\nkubectl describe node --all\n")),Object(a.b)("h1",null,"Creating Pods"),Object(a.b)("p",null,"A Pod is the basic execution unit of a Kubernetes application–the smallest and simplest unit in the Kubernetes object model that you create or deploy. A Pod represents processes running on your Cluster."),Object(a.b)("p",null,"A Pod encapsulates an application’s container (or, in some cases, multiple containers), storage resources, a unique network IP, and options that govern how the container(s) should run. A Pod represents a unit of deployment: a single instance of an application in Kubernetes, which might consist of either a single container or a small number of containers that are tightly coupled and that share resources."),Object(a.b)("h2",null,"Resources"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/"}),"https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/"))),Object(a.b)("h2",null,"References"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Pod\nmetadata:\n  name: myapp-pod\n  labels:\n    app: myapp\nspec:\n  containers:\n  - name: myapp-container\n    image: busybox\n    command: ['sh', '-c', 'echo Hello Kubernetes! && sleep 3600']\n")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"kubectl create -f pod.yaml\n# update label\nkubectl apply -f pod.yaml\n# update label\nkubectl edit pod myapp-pod\nkubectl delete pod myapp-pod\n")),Object(a.b)("h1",null,"Namespaces"),Object(a.b)("p",null,"Namespaces are intended for use in environments with many users spread across multiple teams, or projects."),Object(a.b)("p",null,"Namespaces provide a scope for names. Names of resources need to be unique within a namespace, but not across namespaces."),Object(a.b)("p",null,"Namespaces are a way to divide cluster resources between multiple users (via resource quota)."),Object(a.b)("p",null,"It is not necessary to use multiple namespaces just to separate slightly different resources, such as different versions of the same software: use labels to distinguish resources within the same namespace. In practice namespaces are used to deploy different versions based on stages of the CICD pipeline (dev, test, stage, prod)"),Object(a.b)("h2",null,"Resources:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",r({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"}),"https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"))),Object(a.b)("h2",null,"References:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Namespace\nmetadata:\n  name: foo\n")),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Pod\nmetadata:\n  name: myapp-pod\n  namespace: bar\n  labels:\n    app: myapp\nspec:\n  containers:\n  - name: myapp-container\n    image: busybox\n    command: ['sh', '-c', 'echo Hello Kubernetes! && sleep 3600']\n")),Object(a.b)(i,{mdxType:"Tabs"},Object(a.b)(p,{label:"OpenShift",mdxType:"Tab"},Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"  oc get projects\n"))),Object(a.b)(p,{label:"IKS",mdxType:"Tab"},Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{}),"  kubectl get namespaces\n\n  kubectl create ns bar\n\n  kubens\n\n  kubectl set-context --current --namespace=bar\n\n  # Not in a namespace\n  kubectl api-resources --namespaced=false\n")))))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-kubernetes-core-concepts-index-mdx-680763f0a3b673cbcc8b.js.map